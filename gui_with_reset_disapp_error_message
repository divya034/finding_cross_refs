import PyPDF2
import pandas as pd
import tkinter as tk
from tkinter import filedialog

def browse_pdf():
    pdf_path = filedialog.askopenfilename(filetypes=[("PDF Files", "*.pdf")])
    if pdf_path:
        pdf_label.config(text=f"Selected PDF: {pdf_path}")
        return pdf_path

def extract_hyperlinks_from_pdf():
    """
    Extracts all cross-reference links from a PDF file.

    Returns:
        list: A list of dictionaries containing the cross-reference text, page number, presence of destination in PDF,
        and location of the hyperlink on the page (if available).
    """
    pdf_path = pdf_label.cget("text")[16:]
    if not pdf_path:
        result_label.config(text="No PDF selected!")
        root.after(500, lambda: result_label.config(text=""))
        return
    
    hyperlinks = []
    with open(pdf_path, 'rb') as pdf_file:
        pdf_reader = PyPDF2.PdfReader(pdf_file)
        destinations = pdf_reader.named_destinations
        for page_num in range(len(pdf_reader.pages)):
            page = pdf_reader.pages[page_num]
            if '/Annots' in page:
                annots = page['/Annots']
                if annots:
                    if not isinstance(annots, list):
                        annots = [annots]
                    for annot in annots:
                        obj = annot.get_object()
                        if obj['/Subtype'] == '/Link':
                            hyperlink_text = obj.get('/Contents', '')
                            if '/Dest' in obj:
                                hyperlink_page = obj['/Dest']
                                destination_present = str(hyperlink_page) in destinations
                            elif '/A' in obj and '/D' in obj['/A']:
                                hyperlink_page = obj['/A']['/D']
                                destination_present = str(hyperlink_page) in destinations
                            else:
                                hyperlink_page = ''
                                destination_present = False

                            # Get the location of the hyperlink on the page
                            location = ''
                            if obj.get('/Rect'):
                                rect = obj['/Rect']
                                if rect and len(rect) == 4:
                                    location = 'Page: {}'.format(page_num + 1)


                            if hyperlink_text or hyperlink_page:
                                hyperlink = {
                                    'Destination ID Name': hyperlink_page,
                                    'Destination Present in PDF': 'Yes' if destination_present else 'No',
                                    'Location of the Hyperlink': location
                                }
                                hyperlinks.append(hyperlink)
    if hyperlinks:
        df = pd.DataFrame(hyperlinks)
        try:
            df.to_excel('hyperlinks.xlsx', index=False)
            result_label.config(text="Excel file generated!")
        except:
            result_label.config(text="Error!")
    else:
        result_label.config(text="No hyperlinks found!")

def reset_gui():
    pdf_label.config(text="No PDF selected")
    result_label.config(text="")

# GUI code
root = tk.Tk()
root.title("PDF Hyperlink Extractor")
root.geometry("400x250")

pdf_label = tk.Label(root, text="No PDF selected")
pdf_label.pack(pady=10)

browse_button = tk.Button(root, text="Browse PDF", command=browse_pdf)
browse_button.pack()

extract_button = tk.Button(root, text="Extract Hyperlinks", command=extract_hyperlinks_from_pdf)
extract_button.pack(pady=10)

result_label = tk.Label(root, text="")
result_label.pack()

reset_button = tk.Button(root, text="Reset", command=reset_gui)
reset_button.pack(pady=10)

root.mainloop()
